// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.12.3
// source: configMessage.proto

package netwdevpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CacheUpdateRequest_ActionType int32

const (
	CacheUpdateRequest_ActionReplace CacheUpdateRequest_ActionType = 0
	CacheUpdateRequest_ActionUpdate  CacheUpdateRequest_ActionType = 1
	CacheUpdateRequest_ActionDelete  CacheUpdateRequest_ActionType = 2
)

// Enum value maps for CacheUpdateRequest_ActionType.
var (
	CacheUpdateRequest_ActionType_name = map[int32]string{
		0: "ActionReplace",
		1: "ActionUpdate",
		2: "ActionDelete",
	}
	CacheUpdateRequest_ActionType_value = map[string]int32{
		"ActionReplace": 0,
		"ActionUpdate":  1,
		"ActionDelete":  2,
	}
)

func (x CacheUpdateRequest_ActionType) Enum() *CacheUpdateRequest_ActionType {
	p := new(CacheUpdateRequest_ActionType)
	*p = x
	return p
}

func (x CacheUpdateRequest_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CacheUpdateRequest_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_configMessage_proto_enumTypes[0].Descriptor()
}

func (CacheUpdateRequest_ActionType) Type() protoreflect.EnumType {
	return &file_configMessage_proto_enumTypes[0]
}

func (x CacheUpdateRequest_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CacheUpdateRequest_ActionType.Descriptor instead.
func (CacheUpdateRequest_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{0, 0}
}

type CacheStatusReply_CacheResourceStatus int32

const (
	// None -> no status, object does not exist
	CacheStatusReply_CacheResourceStatusNone CacheStatusReply_CacheResourceStatus = 0
	// ToBeProcessed -> new data, not processed
	CacheStatusReply_CacheResourceStatusToBeProcessed CacheStatusReply_CacheResourceStatus = 1
	// UpdateBeingProcessed -> data is merged in the tree
	CacheStatusReply_CacheResourceStatusUpdateBeingProcessed CacheStatusReply_CacheResourceStatus = 2
	// UpdateProcessedSuccess -> data, processed successfully
	CacheStatusReply_CacheResourceStatusUpdateProcessedSuccess CacheStatusReply_CacheResourceStatus = 3
	// UpdateProcessedSuccessNatsUpdatePending -> data, processed successfully but nats update is missing
	CacheStatusReply_CacheResourceStatusUpdateProcessedSuccessNatsUpdatePending CacheStatusReply_CacheResourceStatus = 4
	// UpdateProcessedFailed -> data, processed unsuccessfully
	CacheStatusReply_CacheResourceStatusUpdateProcessedFailed CacheStatusReply_CacheResourceStatus = 5
	// UpdateProcessedFailedNatsUpdatePending -> data, processing Failed but nats update is missing
	CacheStatusReply_CacheResourceStatusUpdateProcessedFailedNatsUpdatePending CacheStatusReply_CacheResourceStatus = 6
	// DependencyMissing -> data with missing dependency
	CacheStatusReply_CacheResourceStatusDependencyMissing CacheStatusReply_CacheResourceStatus = 7
	// LeafRefDependency -> data with leafref dependency cannot delete
	CacheStatusReply_CacheResourceStatusLeafRefDependency CacheStatusReply_CacheResourceStatus = 8
	// DeletePending -> data with pending gnmi delete
	CacheStatusReply_CacheResourceStatusDeletePending CacheStatusReply_CacheResourceStatus = 9
	// DeletePendingWithParentDependency -> data with pending parent gnmi delete
	CacheStatusReply_CacheResourceStatusDeletePendingWithParentDependency CacheStatusReply_CacheResourceStatus = 10
	// DeleteWithMissingDependency -> data with No pending gnmi update
	CacheStatusReply_CacheResourceStatusDeleteWithMissingDependency CacheStatusReply_CacheResourceStatus = 11
	// UpdatePending -> data with pending update
	CacheStatusReply_CacheResourceStatusUpdatePending CacheStatusReply_CacheResourceStatus = 12
)

// Enum value maps for CacheStatusReply_CacheResourceStatus.
var (
	CacheStatusReply_CacheResourceStatus_name = map[int32]string{
		0:  "CacheResourceStatusNone",
		1:  "CacheResourceStatusToBeProcessed",
		2:  "CacheResourceStatusUpdateBeingProcessed",
		3:  "CacheResourceStatusUpdateProcessedSuccess",
		4:  "CacheResourceStatusUpdateProcessedSuccessNatsUpdatePending",
		5:  "CacheResourceStatusUpdateProcessedFailed",
		6:  "CacheResourceStatusUpdateProcessedFailedNatsUpdatePending",
		7:  "CacheResourceStatusDependencyMissing",
		8:  "CacheResourceStatusLeafRefDependency",
		9:  "CacheResourceStatusDeletePending",
		10: "CacheResourceStatusDeletePendingWithParentDependency",
		11: "CacheResourceStatusDeleteWithMissingDependency",
		12: "CacheResourceStatusUpdatePending",
	}
	CacheStatusReply_CacheResourceStatus_value = map[string]int32{
		"CacheResourceStatusNone":                                    0,
		"CacheResourceStatusToBeProcessed":                           1,
		"CacheResourceStatusUpdateBeingProcessed":                    2,
		"CacheResourceStatusUpdateProcessedSuccess":                  3,
		"CacheResourceStatusUpdateProcessedSuccessNatsUpdatePending": 4,
		"CacheResourceStatusUpdateProcessedFailed":                   5,
		"CacheResourceStatusUpdateProcessedFailedNatsUpdatePending":  6,
		"CacheResourceStatusDependencyMissing":                       7,
		"CacheResourceStatusLeafRefDependency":                       8,
		"CacheResourceStatusDeletePending":                           9,
		"CacheResourceStatusDeletePendingWithParentDependency":       10,
		"CacheResourceStatusDeleteWithMissingDependency":             11,
		"CacheResourceStatusUpdatePending":                           12,
	}
)

func (x CacheStatusReply_CacheResourceStatus) Enum() *CacheStatusReply_CacheResourceStatus {
	p := new(CacheStatusReply_CacheResourceStatus)
	*p = x
	return p
}

func (x CacheStatusReply_CacheResourceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CacheStatusReply_CacheResourceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_configMessage_proto_enumTypes[1].Descriptor()
}

func (CacheStatusReply_CacheResourceStatus) Type() protoreflect.EnumType {
	return &file_configMessage_proto_enumTypes[1]
}

func (x CacheStatusReply_CacheResourceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CacheStatusReply_CacheResourceStatus.Descriptor instead.
func (CacheStatusReply_CacheResourceStatus) EnumDescriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{3, 0}
}

type Deviation_OnChangeAction int32

const (
	Deviation_OnChangeActionUpdate Deviation_OnChangeAction = 0
	Deviation_OnChangeActionDelete Deviation_OnChangeAction = 1
)

// Enum value maps for Deviation_OnChangeAction.
var (
	Deviation_OnChangeAction_name = map[int32]string{
		0: "OnChangeActionUpdate",
		1: "OnChangeActionDelete",
	}
	Deviation_OnChangeAction_value = map[string]int32{
		"OnChangeActionUpdate": 0,
		"OnChangeActionDelete": 1,
	}
)

func (x Deviation_OnChangeAction) Enum() *Deviation_OnChangeAction {
	p := new(Deviation_OnChangeAction)
	*p = x
	return p
}

func (x Deviation_OnChangeAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Deviation_OnChangeAction) Descriptor() protoreflect.EnumDescriptor {
	return file_configMessage_proto_enumTypes[2].Descriptor()
}

func (Deviation_OnChangeAction) Type() protoreflect.EnumType {
	return &file_configMessage_proto_enumTypes[2]
}

func (x Deviation_OnChangeAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Deviation_OnChangeAction.Descriptor instead.
func (Deviation_OnChangeAction) EnumDescriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{6, 0}
}

type Deviation_DeviationAction int32

const (
	Deviation_DeviationActionIgnore                Deviation_DeviationAction = 0
	Deviation_DeviationActionReApplyCache          Deviation_DeviationAction = 1
	Deviation_DeviationActionDelete                Deviation_DeviationAction = 2
	Deviation_DeviationActionDeleteIgnoredByParent Deviation_DeviationAction = 3
)

// Enum value maps for Deviation_DeviationAction.
var (
	Deviation_DeviationAction_name = map[int32]string{
		0: "DeviationActionIgnore",
		1: "DeviationActionReApplyCache",
		2: "DeviationActionDelete",
		3: "DeviationActionDeleteIgnoredByParent",
	}
	Deviation_DeviationAction_value = map[string]int32{
		"DeviationActionIgnore":                0,
		"DeviationActionReApplyCache":          1,
		"DeviationActionDelete":                2,
		"DeviationActionDeleteIgnoredByParent": 3,
	}
)

func (x Deviation_DeviationAction) Enum() *Deviation_DeviationAction {
	p := new(Deviation_DeviationAction)
	*p = x
	return p
}

func (x Deviation_DeviationAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Deviation_DeviationAction) Descriptor() protoreflect.EnumDescriptor {
	return file_configMessage_proto_enumTypes[3].Descriptor()
}

func (Deviation_DeviationAction) Type() protoreflect.EnumType {
	return &file_configMessage_proto_enumTypes[3]
}

func (x Deviation_DeviationAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Deviation_DeviationAction.Descriptor instead.
func (Deviation_DeviationAction) EnumDescriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{6, 1}
}

type CacheUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource                    string                        `protobuf:"bytes,1,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Level                       int32                         `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	Action                      CacheUpdateRequest_ActionType `protobuf:"varint,3,opt,name=Action,proto3,enum=netwdevpb.CacheUpdateRequest_ActionType" json:"Action,omitempty"`
	AggregateActionPath         string                        `protobuf:"bytes,4,opt,name=AggregateActionPath,proto3" json:"AggregateActionPath,omitempty"`
	AggregateActionPathSuccess  bool                          `protobuf:"varint,5,opt,name=AggregateActionPathSuccess,proto3" json:"AggregateActionPathSuccess,omitempty"`
	IndividualActionPath        []string                      `protobuf:"bytes,6,rep,name=IndividualActionPath,proto3" json:"IndividualActionPath,omitempty"`
	IndividualActionPathSuccess []bool                        `protobuf:"varint,7,rep,packed,name=IndividualActionPathSuccess,proto3" json:"IndividualActionPathSuccess,omitempty"`
	ConfigData                  [][]byte                      `protobuf:"bytes,8,rep,name=ConfigData,proto3" json:"ConfigData,omitempty"`
	StatusData                  [][]byte                      `protobuf:"bytes,9,rep,name=StatusData,proto3" json:"StatusData,omitempty"`
	Dependencies                []string                      `protobuf:"bytes,10,rep,name=Dependencies,proto3" json:"Dependencies,omitempty"`
	LeafRefDependencies         []string                      `protobuf:"bytes,11,rep,name=LeafRefDependencies,proto3" json:"LeafRefDependencies,omitempty"`
}

func (x *CacheUpdateRequest) Reset() {
	*x = CacheUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheUpdateRequest) ProtoMessage() {}

func (x *CacheUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheUpdateRequest.ProtoReflect.Descriptor instead.
func (*CacheUpdateRequest) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{0}
}

func (x *CacheUpdateRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *CacheUpdateRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CacheUpdateRequest) GetAction() CacheUpdateRequest_ActionType {
	if x != nil {
		return x.Action
	}
	return CacheUpdateRequest_ActionReplace
}

func (x *CacheUpdateRequest) GetAggregateActionPath() string {
	if x != nil {
		return x.AggregateActionPath
	}
	return ""
}

func (x *CacheUpdateRequest) GetAggregateActionPathSuccess() bool {
	if x != nil {
		return x.AggregateActionPathSuccess
	}
	return false
}

func (x *CacheUpdateRequest) GetIndividualActionPath() []string {
	if x != nil {
		return x.IndividualActionPath
	}
	return nil
}

func (x *CacheUpdateRequest) GetIndividualActionPathSuccess() []bool {
	if x != nil {
		return x.IndividualActionPathSuccess
	}
	return nil
}

func (x *CacheUpdateRequest) GetConfigData() [][]byte {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *CacheUpdateRequest) GetStatusData() [][]byte {
	if x != nil {
		return x.StatusData
	}
	return nil
}

func (x *CacheUpdateRequest) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *CacheUpdateRequest) GetLeafRefDependencies() []string {
	if x != nil {
		return x.LeafRefDependencies
	}
	return nil
}

type CacheUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CacheUpdateReply) Reset() {
	*x = CacheUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheUpdateReply) ProtoMessage() {}

func (x *CacheUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheUpdateReply.ProtoReflect.Descriptor instead.
func (*CacheUpdateReply) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{1}
}

type CacheStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Level    int32  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
}

func (x *CacheStatusRequest) Reset() {
	*x = CacheStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheStatusRequest) ProtoMessage() {}

func (x *CacheStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheStatusRequest.ProtoReflect.Descriptor instead.
func (*CacheStatusRequest) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{2}
}

func (x *CacheStatusRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *CacheStatusRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type CacheStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool                                 `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
	Status CacheStatusReply_CacheResourceStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=netwdevpb.CacheStatusReply_CacheResourceStatus" json:"Status,omitempty"`
	Data   *CacheUpdateRequest                  `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CacheStatusReply) Reset() {
	*x = CacheStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheStatusReply) ProtoMessage() {}

func (x *CacheStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheStatusReply.ProtoReflect.Descriptor instead.
func (*CacheStatusReply) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{3}
}

func (x *CacheStatusReply) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *CacheStatusReply) GetStatus() CacheStatusReply_CacheResourceStatus {
	if x != nil {
		return x.Status
	}
	return CacheStatusReply_CacheResourceStatusNone
}

func (x *CacheStatusReply) GetData() *CacheUpdateRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeviationUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deviation []*Deviation `protobuf:"bytes,1,rep,name=Deviation,proto3" json:"Deviation,omitempty"`
}

func (x *DeviationUpdateRequest) Reset() {
	*x = DeviationUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviationUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviationUpdateRequest) ProtoMessage() {}

func (x *DeviationUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviationUpdateRequest.ProtoReflect.Descriptor instead.
func (*DeviationUpdateRequest) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{4}
}

func (x *DeviationUpdateRequest) GetDeviation() []*Deviation {
	if x != nil {
		return x.Deviation
	}
	return nil
}

type DeviationUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeviationUpdateReply) Reset() {
	*x = DeviationUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviationUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviationUpdateReply) ProtoMessage() {}

func (x *DeviationUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviationUpdateReply.ProtoReflect.Descriptor instead.
func (*DeviationUpdateReply) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{5}
}

type Deviation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnChange       Deviation_OnChangeAction  `protobuf:"varint,1,opt,name=OnChange,proto3,enum=netwdevpb.Deviation_OnChangeAction" json:"OnChange,omitempty"`
	Xpath          string                    `protobuf:"bytes,2,opt,name=Xpath,proto3" json:"Xpath,omitempty"`
	Value          [][]byte                  `protobuf:"bytes,3,rep,name=Value,proto3" json:"Value,omitempty"`
	DevationResult Deviation_DeviationAction `protobuf:"varint,4,opt,name=DevationResult,proto3,enum=netwdevpb.Deviation_DeviationAction" json:"DevationResult,omitempty"`
}

func (x *Deviation) Reset() {
	*x = Deviation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configMessage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deviation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deviation) ProtoMessage() {}

func (x *Deviation) ProtoReflect() protoreflect.Message {
	mi := &file_configMessage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deviation.ProtoReflect.Descriptor instead.
func (*Deviation) Descriptor() ([]byte, []int) {
	return file_configMessage_proto_rawDescGZIP(), []int{6}
}

func (x *Deviation) GetOnChange() Deviation_OnChangeAction {
	if x != nil {
		return x.OnChange
	}
	return Deviation_OnChangeActionUpdate
}

func (x *Deviation) GetXpath() string {
	if x != nil {
		return x.Xpath
	}
	return ""
}

func (x *Deviation) GetValue() [][]byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Deviation) GetDevationResult() Deviation_DeviationAction {
	if x != nil {
		return x.DevationResult
	}
	return Deviation_DeviationActionIgnore
}

var File_configMessage_proto protoreflect.FileDescriptor

var file_configMessage_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62,
	0x22, 0xcb, 0x04, 0x0a, 0x12, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3e, 0x0a,
	0x1a, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1a, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x49, 0x6e, 0x64,
	0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x40, 0x0a, 0x1b, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x1b, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x66, 0x52,
	0x65, 0x66, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x66, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x22, 0x12,
	0x0a, 0x10, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x98, 0x06, 0x0a, 0x10, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65,
	0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xef, 0x04, 0x0a, 0x13, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x6f, 0x42, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x10, 0x01, 0x12, 0x2b,
	0x0a, 0x27, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x10, 0x02, 0x12, 0x2d, 0x0a, 0x29, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x3e, 0x0a, 0x3a, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x12, 0x3d, 0x0a, 0x39, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x4e, 0x61, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x06, 0x12, 0x28, 0x0a, 0x24, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10,
	0x07, 0x12, 0x28, 0x0a, 0x24, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x66, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10,
	0x09, 0x12, 0x38, 0x0a, 0x34, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x0a, 0x12, 0x32, 0x0a, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x0b, 0x12,
	0x24, 0x0a, 0x20, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x10, 0x0c, 0x22, 0x4c, 0x0a, 0x16, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa1, 0x03, 0x0a, 0x09,
	0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x4f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x58, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x58, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x44, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x44, 0x0a, 0x0e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x44,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x15, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x65, 0x76,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x32,
	0x55, 0x0a, 0x0b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64,
	0x65, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65,
	0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x56, 0x0a, 0x0b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x61,
	0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x4e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x64, 0x65, 0x76, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configMessage_proto_rawDescOnce sync.Once
	file_configMessage_proto_rawDescData = file_configMessage_proto_rawDesc
)

func file_configMessage_proto_rawDescGZIP() []byte {
	file_configMessage_proto_rawDescOnce.Do(func() {
		file_configMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_configMessage_proto_rawDescData)
	})
	return file_configMessage_proto_rawDescData
}

var file_configMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_configMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_configMessage_proto_goTypes = []interface{}{
	(CacheUpdateRequest_ActionType)(0),        // 0: netwdevpb.CacheUpdateRequest.ActionType
	(CacheStatusReply_CacheResourceStatus)(0), // 1: netwdevpb.CacheStatusReply.CacheResourceStatus
	(Deviation_OnChangeAction)(0),             // 2: netwdevpb.Deviation.OnChangeAction
	(Deviation_DeviationAction)(0),            // 3: netwdevpb.Deviation.DeviationAction
	(*CacheUpdateRequest)(nil),                // 4: netwdevpb.CacheUpdateRequest
	(*CacheUpdateReply)(nil),                  // 5: netwdevpb.CacheUpdateReply
	(*CacheStatusRequest)(nil),                // 6: netwdevpb.CacheStatusRequest
	(*CacheStatusReply)(nil),                  // 7: netwdevpb.CacheStatusReply
	(*DeviationUpdateRequest)(nil),            // 8: netwdevpb.DeviationUpdateRequest
	(*DeviationUpdateReply)(nil),              // 9: netwdevpb.DeviationUpdateReply
	(*Deviation)(nil),                         // 10: netwdevpb.Deviation
}
var file_configMessage_proto_depIdxs = []int32{
	0,  // 0: netwdevpb.CacheUpdateRequest.Action:type_name -> netwdevpb.CacheUpdateRequest.ActionType
	1,  // 1: netwdevpb.CacheStatusReply.Status:type_name -> netwdevpb.CacheStatusReply.CacheResourceStatus
	4,  // 2: netwdevpb.CacheStatusReply.Data:type_name -> netwdevpb.CacheUpdateRequest
	10, // 3: netwdevpb.DeviationUpdateRequest.Deviation:type_name -> netwdevpb.Deviation
	2,  // 4: netwdevpb.Deviation.OnChange:type_name -> netwdevpb.Deviation.OnChangeAction
	3,  // 5: netwdevpb.Deviation.DevationResult:type_name -> netwdevpb.Deviation.DeviationAction
	4,  // 6: netwdevpb.CacheUpdate.Update:input_type -> netwdevpb.CacheUpdateRequest
	6,  // 7: netwdevpb.CacheStatus.Request:input_type -> netwdevpb.CacheStatusRequest
	8,  // 8: netwdevpb.DeviationUpdate.Update:input_type -> netwdevpb.DeviationUpdateRequest
	5,  // 9: netwdevpb.CacheUpdate.Update:output_type -> netwdevpb.CacheUpdateReply
	7,  // 10: netwdevpb.CacheStatus.Request:output_type -> netwdevpb.CacheStatusReply
	9,  // 11: netwdevpb.DeviationUpdate.Update:output_type -> netwdevpb.DeviationUpdateReply
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_configMessage_proto_init() }
func file_configMessage_proto_init() {
	if File_configMessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configMessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configMessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configMessage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configMessage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviationUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configMessage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviationUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configMessage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deviation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configMessage_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_configMessage_proto_goTypes,
		DependencyIndexes: file_configMessage_proto_depIdxs,
		EnumInfos:         file_configMessage_proto_enumTypes,
		MessageInfos:      file_configMessage_proto_msgTypes,
	}.Build()
	File_configMessage_proto = out.File
	file_configMessage_proto_rawDesc = nil
	file_configMessage_proto_goTypes = nil
	file_configMessage_proto_depIdxs = nil
}
