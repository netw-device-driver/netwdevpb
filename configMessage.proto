syntax = "proto3";
package netwdevpb;
//import "github.com/openconfig/gnmi/proto/gnmi/gnmi.proto";
option go_package = "github.com/netw-device-driver/netwdevpb";


service CacheUpdate {
  rpc Update (CacheUpdateRequest) returns (CacheUpdateReply) {}
}

service CacheStatus {
  rpc Request (CacheStatusRequest) returns (CacheStatusReply) {}
}

message CacheUpdateRequest {
  string          Resource                    = 1;
  int32           Level                       = 2;
  ActionType      Action                      = 3;
  string          AggregateActionPath         = 4;
  bool            AggregateActionPathSuccess  = 5;
  repeated string IndividualActionPath        = 6;
  repeated bool   IndividualActionPathSuccess = 7;
  repeated bytes  ConfigData                  = 8;
  repeated bytes  StatusData                  = 9;
  repeated string Dependencies                = 10;
  repeated string LeafRefDependencies         = 11;

  enum ActionType {
      ActionReplace                           = 0;
      ActionUpdate                            = 1;
      ActionDelete                            = 2;
    }
}

message CacheUpdateReply {
}

message CacheStatusRequest {
  string          Resource                   = 1;
  int32           Level                      = 2;
}

message CacheStatusReply {
  bool                Exists                 = 1;
  CacheResourceStatus Status                 = 2;
  CacheUpdateRequest  Data                   = 3;

  enum CacheResourceStatus {
    // None -> no status, object does not exist
    CacheResourceStatusNone = 0;
    // ToBeProcessed -> new data, not processed
	  CacheResourceStatusToBeProcessed         = 1;
	  // UpdateBeingProcessed -> data is merged in the tree
	  CacheResourceStatusUpdateBeingProcessed  = 2;
	  // UpdateProcessedSuccess -> data, processed successfully
	  CacheResourceStatusUpdateProcessedSuccess = 3;
	  // UpdateProcessedSuccessNatsUpdatePending -> data, processed successfully but nats update is missing
	  CacheResourceStatusUpdateProcessedSuccessNatsUpdatePending = 4;
	  // UpdateProcessedFailed -> data, processed unsuccessfully
	  CacheResourceStatusUpdateProcessedFailed = 5;
	  // UpdateProcessedFailedNatsUpdatePending -> data, processing Failed but nats update is missing
	  CacheResourceStatusUpdateProcessedFailedNatsUpdatePending = 6;
	  // DependencyMissing -> data with missing dependency
	  CacheResourceStatusDependencyMissing = 7;
    // LeafRefDependency -> data with leafref dependency cannot delete
	  CacheResourceStatusLeafRefDependency = 8;
	  // DeletePending -> data with pending gnmi delete
	  CacheResourceStatusDeletePending = 9;
	  // DeletePendingWithParentDependency -> data with pending parent gnmi delete
	  CacheResourceStatusDeletePendingWithParentDependency = 10;
	  // DeleteWithMissingDependency -> data with No pending gnmi update
	  CacheResourceStatusDeleteWithMissingDependency = 11;
	  // UpdatePending -> data with pending update
	  CacheResourceStatusUpdatePending = 12;
    
  }
}

service DeviationUpdate {
  rpc Update (DeviationUpdateRequest) returns (DeviationUpdateReply) {}
}

message DeviationUpdateRequest {
  repeated Deviation Deviations           = 1;
}

message DeviationUpdateReply {
}

message Deviation {
  OnChangeAction      OnChange           = 1;
  string              Xpath              = 2;
  bytes               Value              = 3; 
  DeviationAction     DevationResult     = 4;

  enum OnChangeAction {
    OnChangeActionUpdate                 = 0;
    OnChangeActionDelete                 = 1;
  }

  enum DeviationAction {
    DeviationActionIgnore                = 0;
    DeviationActionReApplyCache          = 1;
    DeviationActionDelete                = 2;
    DeviationActionDeleteIgnoredByParent = 3;
    DeviationActionIgnoreException       = 4;
  }
}

service Registration {
  rpc Register (RegistrationRequest) returns (RegistrationReply) {}

  rpc DeRegister (RegistrationRequest) returns (RegistrationReply) {}
}

message RegistrationRequest {
  string          DeviceKind             = 1;
  string          DeviceMatch            = 2;
  repeated string Subscriptions          = 3;
  repeated string ExcpetionPaths         = 4;
  repeated string ExplicitExceptionPaths = 5;
}

message RegistrationReply {
}